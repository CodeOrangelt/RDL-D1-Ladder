const a28_0x37fb91=(function(){let _0x5ab514=!![];return function(_0x31b632,_0x5d0087){const _0x3c6a1b=_0x5ab514?function(){const _0x522e8b=a28_0xf0ba;if(_0x5d0087){const _0x48a04f=_0x5d0087[_0x522e8b(0xd0)](_0x31b632,arguments);return _0x5d0087=null,_0x48a04f;}}:function(){};return _0x5ab514=![],_0x3c6a1b;};}()),a28_0x37288f=a28_0x37fb91(this,function(){const _0x23c4af=a28_0xf0ba;let _0x319f11;try{const _0x2328a8=Function(_0x23c4af(0xcf)+_0x23c4af(0xe5)+');');_0x319f11=_0x2328a8();}catch(_0x32db5a){_0x319f11=window;}const _0x505e3f=_0x319f11[_0x23c4af(0xe9)]=_0x319f11['console']||{},_0x10b3cd=[_0x23c4af(0xeb),'warn','info',_0x23c4af(0xea),'exception','table','trace'];for(let _0x3e18c0=0x0;_0x3e18c0<_0x10b3cd['length'];_0x3e18c0++){const _0x3eb29a=a28_0x37fb91['constructor'][_0x23c4af(0xe3)]['bind'](a28_0x37fb91),_0x403ae3=_0x10b3cd[_0x3e18c0],_0x507c71=_0x505e3f[_0x403ae3]||_0x3eb29a;_0x3eb29a['__proto__']=a28_0x37fb91['bind'](a28_0x37fb91),_0x3eb29a[_0x23c4af(0xee)]=_0x507c71['toString']['bind'](_0x507c71),_0x505e3f[_0x403ae3]=_0x3eb29a;}});a28_0x37288f();function a28_0x52bd(){const _0x114823=['Could\x20not\x20find\x20player\x20documents','match','return\x20(function()\x20','apply','pointsHistory','ELO\x20ratings\x20updated\x20successfully','position','username','empty','data','system-match-award','email','Position\x20swap\x20needed\x20-\x20winner\x20was\x20lower\x20ranked','displayName','MAX_SAFE_INTEGER','userProfiles','docs','exists','winnerScore','eloRating','points','Match\x20points:\x20','prototype','checkAndRecordPromotion','{}.constructor(\x22return\x20this\x22)(\x20)','Error\x20assigning\x20default\x20ELO\x20rating:','update','add','console','error','log','all','Points\x20award\x20failed,\x20but\x20match\x20approval\x20continues:','toString','warn','wins','players'];a28_0x52bd=function(){return _0x114823;};return a28_0x52bd();}import{collection,doc,getDoc,getDocs,updateDoc,setDoc,deleteDoc,writeBatch,query,where,serverTimestamp,addDoc}from'https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js';import{db,auth}from'./firebase-config.js';import{recordEloChange}from'./elo-history.js';import{promotionManager,checkAndRecordPromotion}from'./promotions.js';import{isAdmin}from'./admin-check.js';export function calculateElo(_0xe33967,_0x37eb6a,_0x35f77f=0x20){const _0x399c47=0x1/(0x1+Math['pow'](0xa,(_0x37eb6a-_0xe33967)/0x190)),_0x3c1a3f=0x1/(0x1+Math['pow'](0xa,(_0xe33967-_0x37eb6a)/0x190)),_0x21d459=_0xe33967+_0x35f77f*(0x1-_0x399c47),_0x13f2eb=_0x37eb6a+_0x35f77f*(0x0-_0x3c1a3f);return{'newWinnerRating':Math['round'](_0x21d459),'newLoserRating':Math['round'](_0x13f2eb)};}function a28_0xf0ba(_0xa06168,_0x5c6b91){const _0x37288f=a28_0x52bd();return a28_0xf0ba=function(_0x37fb91,_0xed9fc7){_0x37fb91=_0x37fb91-0xcd;let _0x52bd70=_0x37288f[_0x37fb91];return _0x52bd70;},a28_0xf0ba(_0xa06168,_0x5c6b91);}export function assignDefaultEloRating(_0xdb151a,_0x5782dd){const _0x3fa33d=a28_0xf0ba,_0xff647f=0x4b0;!_0x5782dd['eloRating']&&db['collection'](_0x3fa33d(0xf1))['doc'](_0xdb151a)[_0x3fa33d(0xe7)]({'eloRating':_0xff647f})['then'](()=>{console['log']('Assigned\x20default\x20ELO\x20rating\x20to\x20player\x20'+_0x5782dd['username']);})['catch'](_0x548616=>{const _0x3e8c5e=_0x3fa33d;console[_0x3e8c5e(0xea)](_0x3e8c5e(0xe6),_0x548616);});}export async function updateEloRatings(_0x4f99d2,_0x9eedcb,_0x2222ae){const _0x490220=a28_0xf0ba;try{const _0x136880=writeBatch(db),_0x196e0f=doc(db,'players',_0x4f99d2),_0x32cc0c=doc(db,'players',_0x9eedcb),[_0x5cc3ff,_0x523d74]=await Promise[_0x490220(0xec)]([getDoc(_0x196e0f),getDoc(_0x32cc0c)]);if(!_0x5cc3ff['exists']()||!_0x523d74['exists']())throw new Error('One\x20or\x20both\x20players\x20not\x20found');const _0xb32567=_0x5cc3ff['data'](),_0xc97a74=_0x523d74[_0x490220(0xd6)](),_0x14f385=_0xb32567[_0x490220(0xd3)]||Number['MAX_SAFE_INTEGER'],_0x30c3ee=_0xc97a74['position']||Number[_0x490220(0xdb)],{newWinnerRating:_0xbd34d1,newLoserRating:_0x2a10ed}=calculateElo(_0xb32567[_0x490220(0xe0)]||0x4b0,_0xc97a74['eloRating']||0x4b0);let _0x646be2=_0x14f385,_0x171c7c=_0x30c3ee;if(_0x14f385>_0x30c3ee){console[_0x490220(0xeb)](_0x490220(0xd9)),_0x646be2=_0x30c3ee,_0x171c7c=_0x30c3ee+0x1;const _0x89e2=query(collection(db,'players'),where('position','>',_0x30c3ee),where(_0x490220(0xd3),'<',_0x14f385)),_0x5e46a0=await getDocs(_0x89e2);for(const _0x471552 of _0x5e46a0['docs']){_0x471552['id']!==_0x4f99d2&&_0x471552['id']!==_0x9eedcb&&_0x136880[_0x490220(0xe7)](doc(db,'players',_0x471552['id']),{'position':_0x471552[_0x490220(0xd6)]()[_0x490220(0xd3)]+0x1});}}else console['log']('Winner\x20already\x20ranked\x20higher\x20-\x20keeping\x20positions');const _0x3373a9={'eloRating':_0xbd34d1,'lastMatchDate':serverTimestamp(),'position':_0x646be2,'lastMatchId':_0x2222ae},_0x37b423={'eloRating':_0x2a10ed,'lastMatchDate':serverTimestamp(),'position':_0x171c7c,'lastMatchId':_0x2222ae};return _0x136880[_0x490220(0xe7)](_0x196e0f,_0x3373a9),_0x136880['update'](_0x32cc0c,_0x37b423),await _0x136880['commit'](),console[_0x490220(0xeb)](_0x490220(0xd2)),await Promise['all']([recordEloChange({'playerId':_0x4f99d2,'previousElo':_0xb32567[_0x490220(0xe0)]||0x4b0,'newElo':_0xbd34d1,'opponentId':_0x9eedcb,'matchResult':'win','previousPosition':_0x14f385,'newPosition':_0x646be2,'isPromotion':_0x646be2<_0x14f385,'matchId':_0x2222ae,'timestamp':serverTimestamp()}),recordEloChange({'playerId':_0x9eedcb,'previousElo':_0xc97a74[_0x490220(0xe0)]||0x4b0,'newElo':_0x2a10ed,'opponentId':_0x4f99d2,'matchResult':'loss','previousPosition':_0x30c3ee,'newPosition':_0x171c7c,'isDemotion':_0x171c7c>_0x30c3ee,'matchId':_0x2222ae,'timestamp':serverTimestamp()})]),await promotionManager['checkAndRecordPromotion'](_0x4f99d2,_0xbd34d1,_0xb32567[_0x490220(0xe0)],{'source':_0x490220(0xce),'matchId':_0x2222ae}),await promotionManager[_0x490220(0xe4)](_0x9eedcb,_0x2a10ed,_0xc97a74[_0x490220(0xe0)],{'source':_0x490220(0xce),'matchId':_0x2222ae}),console['log']('ELO\x20ratings\x20and\x20positions\x20updated\x20successfully'),!![];}catch(_0x341342){console['error']('Error\x20in\x20updateEloRatings:',_0x341342);throw _0x341342;}}const POINTS_CHART={'':0xa,'Standard':0xa,'Fusion\x20Match':0x19,'â‰¥6\x20Missiles':0xa,'Weapon\x20Imbalance':0x1e,'Blind\x20Match':0x4b,'Rematch':0x14,'Disorientation':0x32,'Ratting':0x23,'Altered\x20Powerups':0x23,'Mega\x20Match':0x28,'Dogfight':0x32,'Gauss\x20and\x20Mercs':0x19,'Misc':0x1e};export async function approveReport(_0x41dffd,_0x14ce02,_0x32eca7,_0x557bb7,_0x41d7f8){const _0x5df182=a28_0xf0ba;try{const _0x514686=doc(db,'pendingMatches',_0x41dffd),_0x17aef7=await getDoc(_0x514686);if(!_0x17aef7['exists']())throw new Error('Report\x20not\x20found');const _0x20dee9=_0x17aef7['data'](),_0x413b96={..._0x20dee9,'winnerScore':_0x14ce02,'winnerSuicides':_0x32eca7,'winnerComment':_0x557bb7,'winnerDemoLink':_0x41d7f8,'approved':!![],'approvedAt':serverTimestamp(),'approvedBy':auth['currentUser']['uid']};await setDoc(doc(db,'approvedMatches',_0x41dffd),_0x413b96),await deleteDoc(_0x514686),console[_0x5df182(0xeb)]('Match\x20moved\x20to\x20approved\x20collection');const [_0x25fbce,_0x55fc24]=await Promise['all']([getDocs(query(collection(db,_0x5df182(0xf1)),where('username','==',_0x20dee9['winnerUsername']))),getDocs(query(collection(db,'players'),where(_0x5df182(0xd4),'==',_0x20dee9['loserUsername'])))]);if(_0x25fbce[_0x5df182(0xd5)]||_0x55fc24['empty'])throw new Error(_0x5df182(0xcd));const _0x453f64=_0x25fbce[_0x5df182(0xdd)][0x0]['id'],_0x3e61d4=_0x55fc24['docs'][0x0]['id'];await updateEloRatings(_0x453f64,_0x3e61d4,_0x41dffd);try{const _0x5b2428=_0x20dee9['subgameType']||'Standard',_0x36e69e=POINTS_CHART[_0x5b2428]||0xa,_0x1d5e62=doc(db,'userProfiles',_0x453f64),_0x23d94d=doc(db,_0x5df182(0xdc),_0x3e61d4),[_0x30f8e3,_0x4b511c]=await Promise['all']([getDoc(_0x1d5e62),getDoc(_0x23d94d)]);if(_0x30f8e3[_0x5df182(0xde)]()&&_0x4b511c['exists']()){const _0x51afde=_0x30f8e3[_0x5df182(0xd6)](),_0x2292db=_0x4b511c[_0x5df182(0xd6)](),_0x364cd7=_0x51afde[_0x5df182(0xe1)]||0x0,_0xcc49ee=_0x2292db['points']||0x0,_0x5bb8fb=_0x364cd7+_0x36e69e,_0x492692=_0xcc49ee+_0x36e69e;await Promise['all']([updateDoc(_0x1d5e62,{'points':_0x5bb8fb,'lastPointsModified':serverTimestamp()}),updateDoc(_0x23d94d,{'points':_0x492692,'lastPointsModified':serverTimestamp()})]),await Promise['all']([addDoc(collection(db,'pointsHistory'),{'userId':_0x453f64,'userEmail':_0x51afde['email']||'unknown','displayName':_0x51afde[_0x5df182(0xda)]||_0x51afde['username']||'Unknown\x20User','action':'add','amount':_0x36e69e,'previousPoints':_0x364cd7,'newPoints':_0x5bb8fb,'reason':_0x5df182(0xe2)+_0x5b2428+'\x20match\x20(Winner)','adminEmail':'system-match-award','timestamp':serverTimestamp()}),addDoc(collection(db,_0x5df182(0xd1)),{'userId':_0x3e61d4,'userEmail':_0x2292db[_0x5df182(0xd8)]||'unknown','displayName':_0x2292db['displayName']||_0x2292db['username']||'Unknown\x20User','action':_0x5df182(0xe8),'amount':_0x36e69e,'previousPoints':_0xcc49ee,'newPoints':_0x492692,'reason':'Match\x20points:\x20'+_0x5b2428+'\x20match\x20(Participant)','adminEmail':_0x5df182(0xd7),'timestamp':serverTimestamp()})]),console[_0x5df182(0xeb)]('Awarded\x20'+_0x36e69e+'\x20points\x20to\x20both\x20players\x20for\x20'+_0x5b2428+'\x20match');}else console[_0x5df182(0xef)]('Could\x20not\x20award\x20points\x20-\x20one\x20or\x20both\x20user\x20profiles\x20not\x20found');}catch(_0x3aa4bf){console[_0x5df182(0xef)](_0x5df182(0xed),_0x3aa4bf);}return console['log']('Match\x20successfully\x20approved\x20and\x20ELO\x20updated'),!![];}catch(_0x4b9632){console['error']('Error\x20approving\x20report:',_0x4b9632);throw _0x4b9632;}}async function updatePlayerElo(_0x43fa44,_0x563708,_0xb0e0ae){const _0x4c1e21=a28_0xf0ba;await setDoc(doc(db,_0x4c1e21(0xf1),_0x43fa44),{...playerData,'eloRating':_0xb0e0ae}),await checkAndRecordPromotion(_0x43fa44,_0xb0e0ae,_0x563708);}async function updatePlayerStats(_0xd96aa3,_0x489ed8,_0x3088c4){const _0x46ad43=a28_0xf0ba,_0x455087=doc(db,'playerStats',_0xd96aa3),_0x589707=await getDoc(_0x455087);let _0x3e8c90=_0x589707['exists']()?_0x589707['data']():{'wins':0x0,'losses':0x0,'totalKills':0x0,'totalDeaths':0x0,'winRate':0x0};_0x3088c4?(_0x3e8c90[_0x46ad43(0xf0)]++,_0x3e8c90['totalKills']+=parseInt(_0x489ed8[_0x46ad43(0xdf)]||0x0),_0x3e8c90['totalDeaths']+=parseInt(_0x489ed8['loserScore']||0x0)):(_0x3e8c90['losses']++,_0x3e8c90['totalKills']+=parseInt(_0x489ed8['loserScore']||0x0),_0x3e8c90['totalDeaths']+=parseInt(_0x489ed8[_0x46ad43(0xdf)]||0x0));const _0x22d3ac=_0x3e8c90['wins']+_0x3e8c90['losses'];_0x3e8c90['winRate']=_0x22d3ac>0x0?(_0x3e8c90['wins']/_0x22d3ac*0x64)['toFixed'](0x1):0x0,_0x3e8c90['lastUpdated']=new Date()['toISOString'](),await setDoc(_0x455087,_0x3e8c90,{'merge':!![]});}