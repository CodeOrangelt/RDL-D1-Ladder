name: Build and Deploy
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install obfuscation tools
        run: |
          npm init -y
          npm install --save-dev javascript-obfuscator terser html-minifier-terser clean-css-cli

      - name: Create dist directory
        run: |
          mkdir -p dist/JS
          mkdir -p dist/CSS
          mkdir -p dist/images

      - name: Copy and minify CSS
        run: |
          for file in CSS/*.css; do
            if [ -f "$file" ]; then
              npx cleancss -o "dist/CSS/$(basename "$file")" "$file"
            fi
          done

      - name: Copy images
        run: |
          cp -r images/* dist/images/ 2>/dev/null || :
          cp -r *.ico dist/ 2>/dev/null || :

      - name: Create Firebase Config
        run: |
          cp JS/firebase-config.template.js JS/firebase-config.js
          sed -i 's/__FIREBASE_API_KEY__/${{ secrets.FIREBASE_API_KEY }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_AUTH_DOMAIN__/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_PROJECT_ID__/${{ secrets.FIREBASE_PROJECT_ID }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_STORAGE_BUCKET__/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_MESSAGING_SENDER_ID__/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_APP_ID__/${{ secrets.FIREBASE_APP_ID }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_MEASUREMENT_ID__/${{ secrets.FIREBASE_MEASUREMENT_ID }}/g' JS/firebase-config.js

      - name: Remove console logs and debug code
        run: |
          # Remove all console statements
          find JS -name "*.js" -type f -exec sed -i '/console\.\(log\|error\|warn\|info\|debug\|trace\|assert\|dir\|time\|timeEnd\|clear\|table\)/d' {} \;
          
          # Remove debugger statements
          find JS -name "*.js" -type f -exec sed -i '/debugger/d' {} \;
          
          # Remove comments (// and /* */)
          find JS -name "*.js" -type f -exec sed -i 's|//.*||g' {} \;
          find JS -name "*.js" -type f -exec sed -i '/\/\*/,/\*\//d' {} \;

      - name: Ultra-strong obfuscation
        run: |
          npx javascript-obfuscator JS \
            --output dist/JS \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 1 \
            --dead-code-injection true \
            --dead-code-injection-threshold 1 \
            --debug-protection true \
            --debug-protection-interval 4000 \
            --disable-console-output true \
            --identifier-names-generator 'mangled-shuffled' \
            --log false \
            --numbers-to-expressions true \
            --rename-globals true \
            --rename-properties true \
            --rename-properties-mode 'unsafe' \
            --reserved-names '[]' \
            --reserved-strings '[]' \
            --seed 0 \
            --self-defending true \
            --simplify true \
            --split-strings true \
            --split-strings-chunk-length 5 \
            --string-array true \
            --string-array-calls-transform true \
            --string-array-calls-transform-threshold 1 \
            --string-array-encoding 'base64' \
            --string-array-index-shift true \
            --string-array-rotate true \
            --string-array-shuffle true \
            --string-array-wrappers-count 5 \
            --string-array-wrappers-chained-calls true \
            --string-array-wrappers-parameters-max-count 5 \
            --string-array-wrappers-type 'function' \
            --string-array-threshold 1 \
            --transform-object-keys true \
            --unicode-escape-sequence true

      - name: Additional obfuscation with Terser
        run: |
          # Second pass with Terser for maximum compression
          for file in dist/JS/*.js; do
            if [ -f "$file" ]; then
              npx terser "$file" \
                --compress drop_console=true,drop_debugger=true,pure_funcs=['console.log','console.error','console.warn','console.info','console.debug'],passes=3 \
                --mangle toplevel=true,reserved=['require','exports','module'] \
                --output "$file"
            fi
          done

      - name: Process HTML files (no minification)
        run: |
          # Copy HTML files to dist
          cp -r ./HTML/* ./dist/
          
          # Update paths in HTML files to point to obfuscated assets
          find ./dist -type f -name "*.html" -exec sed -i 's/\.\.\/CSS/\.\/CSS/g' {} \;
          find ./dist -type f -name "*.html" -exec sed -i 's/\.\.\/JS/\.\/JS/g' {} \;
          find ./dist -type f -name "*.html" -exec sed -i 's/\.\.\/images/\.\/images/g' {} \;
          
          # Remove HTML comments and extra whitespace
          find ./dist -type f -name "*.html" -exec sed -i '/<!--.*-->/d' {} \;
          find ./dist -type f -name "*.html" -exec sed -i 's/^[ \t]*//g' {} \;

      - name: Create root structure for deployment
        run: |
          # Copy all dist contents to root for GitHub Pages
          cp -r ./dist/* ./
          
          # Make sure index.html is in root
          cp ./dist/index.html ./index.html 2>/dev/null || cp ./HTML/index.html ./index.html

      - name: Remove source files from deployment
        run: |
          # Remove original source directories to prevent exposure
          rm -rf ./HTML/
          rm -rf ./dist/
          rm -rf ./.github/
          rm -rf ./node_modules/
          rm -f ./package*.json
          rm -f ./README.md
          rm -f ./firebase-config.template.js

      - name: Create build info
        run: |
          echo "Build Date: $(date)" > build-info.txt
          echo "Commit: ${{ github.sha }}" >> build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> build-info.txt
          echo "Obfuscated: ultra-strong" >> build-info.txt
          echo "Console logs: removed" >> build-info.txt
          echo "Comments: removed" >> build-info.txt

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: .
          clean: true