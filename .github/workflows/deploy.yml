name: Build and Deploy to VPS
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare root files
        run: |
          # Copy all HTML files to root 
          cp -r ./HTML/* ./
          
          # Make a proper root index.html
          cp ./HTML/index.html ./index.html
          
          # Update paths in HTML files
          find . -type f -name "*.html" -exec sed -i 's/\.\.\/CSS/\.\/CSS/g' {} \;
          find . -type f -name "*.html" -exec sed -i 's/\.\.\/JS/\.\/JS/g' {} \;
          find . -type f -name "*.html" -exec sed -i 's/\.\.\/images/\.\/images/g' {} \;
          
          # CRITICAL: Fix import paths in JavaScript files too
          find ./JS -type f -name "*.js" -exec sed -i 's/from "JS\//from ".\/JS\//g' {} \;
          
      - name: Create Firebase Config
        run: |
          cp JS/firebase-config.template.js JS/firebase-config.js
          sed -i 's/__FIREBASE_API_KEY__/${{ secrets.FIREBASE_API_KEY }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_AUTH_DOMAIN__/${{ secrets.FIREBASE_AUTH_DOMAIN }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_PROJECT_ID__/${{ secrets.FIREBASE_PROJECT_ID }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_STORAGE_BUCKET__/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_MESSAGING_SENDER_ID__/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_APP_ID__/${{ secrets.FIREBASE_APP_ID }}/g' JS/firebase-config.js
          sed -i 's/__FIREBASE_MEASUREMENT_ID__/${{ secrets.FIREBASE_MEASUREMENT_ID }}/g' JS/firebase-config.js

      - name: Create .htaccess for Apache
        run: |
          cat > .htaccess << 'EOF'
          RewriteEngine On
          
          # Enable GZIP compression
          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
          </IfModule>
          
          # Cache static assets
          <IfModule mod_expires.c>
              ExpiresActive On
              ExpiresByType text/css "access plus 1 month"
              ExpiresByType application/javascript "access plus 1 month"
              ExpiresByType image/png "access plus 1 month"
              ExpiresByType image/jpg "access plus 1 month"
              ExpiresByType image/jpeg "access plus 1 month"
          </IfModule>
          
          # Clean URLs - remove .html extension
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteRule ^([^\.]+)$ $1.html [NC,L]
          
          # Remove .html extension from URLs
          RewriteCond %{THE_REQUEST} /([^.]+)\.html [NC]
          RewriteRule ^ /%1 [NC,L,R=301]
          EOF

      - name: Obfuscate JavaScript
        uses: KevinRohn/github-action-javascript-obfuscator@v1
        with:
          input_path: JS
          output_path: JS
          compact: true
          control_flow_flattening: false
          dead_code_injection: false
          debug_protection: false
          disable_console_output: true
          identifier_names_generator: mangled
          self_defending: false
          string_array: true
          string_array_threshold: 0.5
          string_array_encoding: 'base64'
          transform_object_keys: false
          target: browser

      - name: Deploy to VPS
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{ secrets.VPS_HOST }}
          user: ${{ secrets.VPS_USERNAME }}
          pass: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /var/www/html
            if [ -d "current" ]; then
              mv current backup_$(date +%Y%m%d_%H%M%S)
            fi
            mkdir -p current

      - name: Upload files to VPS  
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass rsync
          sshpass -p '${{ secrets.VPS_PASSWORD }}' rsync -avz --delete ./ root@${{ secrets.VPS_HOST }}:/var/www/html/

      - name: Set permissions
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{ secrets.VPS_HOST }}
          user: ${{ secrets.VPS_USERNAME }}
          pass: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /var/www/html
            find . -type f -exec chmod 644 {} \;
            find . -type d -exec chmod 755 {} \;
            chmod -R 755 /var/www/html
            systemctl reload apache2 2>/dev/null || true